<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <!--日志格式应用spring boot默认的格式，也可以自己更改-->
  <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

  <property name="APP_CONSOLE_LOG_PATTERN"
    value="${APP_CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} [%X{traceId}] %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
  <property name="APP_FILE_LOG_PATTERN"
    value="${APP_FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] [%X{traceId}] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

  <!--定义日志存放的位置，默认存放在项目启动的相对路径的目录-->
  <springProperty defaultValue="esurvey-log" name="LOG_PATH" scope="context" source="log.path"/>

  <!-- ****************************************************************************************** -->
  <!-- ****************************** 本地开发只在控制台打印日志 ************************************ -->
  <!-- ****************************************************************************************** -->
  <springProfile name="local">
    <appender class="ch.qos.logback.core.ConsoleAppender" name="STDOUT">
      <encoder>
        <pattern>${APP_CONSOLE_LOG_PATTERN}</pattern>
        <charset>utf-8</charset>
      </encoder>
    </appender>

    <!--默认所有的包以info-->
    <root level="info">
      <appender-ref ref="STDOUT"/>
    </root>

    <!--各个服务的包在本地执行的时候，打开debug模式-->
    <logger additivity="false" level="debug" name="cn.chinatelecom.esurvey">
      <appender-ref ref="STDOUT"/>
    </logger>
  </springProfile>

  <!-- ********************************************************************************************** -->
  <!-- **** 放到服务器上不管在什么环境都只在文件记录日志，控制台（catalina.out）打印logback捕获不到的日志 **** -->
  <!-- ********************************************************************************************** -->
  <springProfile name="!local">

    <appender class="ch.qos.logback.core.ConsoleAppender" name="STDOUT">
      <encoder>
        <pattern>${APP_FILE_LOG_PATTERN}</pattern>
        <charset>utf-8</charset>
      </encoder>
    </appender>

    <!-- 日志记录器，日期滚动记录 -->
    <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="FILE_ERROR">

      <!-- 正在记录的日志文件的路径及文件名 -->
      <file>${LOG_PATH}/log_error.log</file>

      <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

        <!-- 归档的日志文件的路径，%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
        <fileNamePattern>${LOG_PATH}/error/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>

        <!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
        命名日志文件，例如log-error-2013-12-21.0.log -->
        <timeBasedFileNamingAndTriggeringPolicy
          class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
          <maxFileSize>10MB</maxFileSize>
        </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>

      <!-- 追加方式记录日志 -->
      <append>true</append>

      <!-- 日志文件的格式 -->
      <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <pattern>${APP_FILE_LOG_PATTERN}</pattern>
        <charset>utf-8</charset>
      </encoder>

      <!-- 此日志文件只记录error级别的 -->
      <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>error</level>
        <onMatch>ACCEPT</onMatch>
        <onMismatch>DENY</onMismatch>
      </filter>
    </appender>

    <!-- 日志记录器，日期滚动记录 -->
    <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="FILE_ALL">

      <!-- 正在记录的日志文件的路径及文件名 -->
      <file>${LOG_PATH}/log_total.log</file>

      <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

        <!-- 归档的日志文件的路径，%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
        <fileNamePattern>${LOG_PATH}/total/log-total-%d{yyyy-MM-dd}.%i.log</fileNamePattern>

        <!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
        命名日志文件，例如log-error-2013-12-21.0.log -->
        <timeBasedFileNamingAndTriggeringPolicy
          class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
          <maxFileSize>10MB</maxFileSize>
        </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>

      <!-- 追加方式记录日志 -->
      <append>true</append>

      <!-- 日志文件的格式 -->
      <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <pattern>${APP_FILE_LOG_PATTERN}</pattern>
        <charset>utf-8</charset>
      </encoder>

      <!-- 日志记录非error 日志-->
      <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>ERROR</level>
        <onMatch>DENY</onMatch>  <!-- 如果命中就禁止这条日志 -->
        <onMismatch>ACCEPT</onMismatch>  <!-- 如果没有命中就使用这条规则 -->
      </filter>


    </appender>


    <!-- 日志记录器，日期滚动记录 -->
    <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="APPENDER_CONTROLLER_DIGEST">

      <!-- 正在记录的日志文件的路径及文件名 -->
      <file>${LOG_PATH}/log_controller_digest.log</file>

      <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

        <!-- 归档的日志文件的路径，%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
        <fileNamePattern>${LOG_PATH}/total/log-controller-digest-%d{yyyy-MM-dd}.%i.log</fileNamePattern>

        <!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
        命名日志文件，例如log-error-2013-12-21.0.log -->
        <timeBasedFileNamingAndTriggeringPolicy
          class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
          <maxFileSize>10MB</maxFileSize>
        </timeBasedFileNamingAndTriggeringPolicy>
      </rollingPolicy>

      <!-- 追加方式记录日志 -->
      <append>true</append>

      <!-- 日志文件的格式 -->
      <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <pattern>${APP_FILE_LOG_PATTERN}</pattern>
        <charset>utf-8</charset>
      </encoder>

      <!-- 日志记录非error 日志-->
      <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>ERROR</level>
        <onMatch>DENY</onMatch>  <!-- 如果命中就禁止这条日志 -->
        <onMismatch>ACCEPT</onMismatch>  <!-- 如果没有命中就使用这条规则 -->
      </filter>


    </appender>

    <!--记录到文件时，记录两类一类是error日志，一个是所有日志-->
    <root level="info">
      <appender-ref ref="STDOUT"/>
      <appender-ref ref="FILE_ERROR"/>
      <appender-ref ref="FILE_ALL"/>
    </root>

    <!-- mybatis 相关，打开debug模式-->
    <logger additivity="false" level="debug" name="cn.chinatelecom.esurvey.dao">
      <appender-ref ref="FILE_ALL"/>
    </logger>

    <logger additivity="false" level="info" name="LOGGER_CONTROLLER_DIGEST">
      <appender-ref ref="APPENDER_CONTROLLER_DIGEST"/>
    </logger>

  </springProfile>

</configuration>


